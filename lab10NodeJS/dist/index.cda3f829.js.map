{"mappings":"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","sources":["node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.js","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/index.ts","src/acquisitions.js"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import { Chart } from 'chart.js/auto'\r\n\r\n(async function() {\r\n    const data = [\r\n        { year: 2010, count: 10 },\r\n        { year: 2011, count: 20 },\r\n        { year: 2012, count: 15 },\r\n        { year: 2013, count: 25 },\r\n        { year: 2014, count: 22 },\r\n        { year: 2015, count: 30 },\r\n        { year: 2016, count: 28 },\r\n    ];\r\n\r\n    new Chart(\r\n        document.getElementById('acquisitions'), {\r\n            type: 'bar',\r\n            data: {\r\n                labels: data.map(row => row.year),\r\n                datasets: [{\r\n                    label: 'Acquisitions by year',\r\n                    data: data.map(row => row.count)\r\n                }]\r\n            }\r\n        }\r\n    );\r\n})();"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","debounce","delay","timeout","clearTimeout","setTimeout","this","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","$8d27ca75da600b9c$export$f1e1789686576879","$8d27ca75da600b9c$var$round","$8d27ca75da600b9c$var$lim","l","h","$8d27ca75da600b9c$var$p2b","$8d27ca75da600b9c$var$n2b","$8d27ca75da600b9c$var$b2n","$8d27ca75da600b9c$var$n2p","$8d27ca75da600b9c$var$map$1","A","B","C","D","E","F","c","f","$8d27ca75da600b9c$var$hex","$8d27ca75da600b9c$var$h1","$8d27ca75da600b9c$var$h2","$8d27ca75da600b9c$var$eq","$8d27ca75da600b9c$var$hexString","r","g","$8d27ca75da600b9c$var$isShort","$8d27ca75da600b9c$var$alpha","undefined","$8d27ca75da600b9c$var$HUE_RE","$8d27ca75da600b9c$var$hsl2rgbn","$8d27ca75da600b9c$var$hsv2rgbn","$8d27ca75da600b9c$var$hwb2rgbn","w","rgb","$8d27ca75da600b9c$var$rgb2hsl","$8d27ca75da600b9c$var$hueValue","$8d27ca75da600b9c$var$calln","$8d27ca75da600b9c$var$hsl2rgb","$8d27ca75da600b9c$var$hue","$8d27ca75da600b9c$var$hueParse","exec","p1","p2","$8d27ca75da600b9c$var$hwb2rgb","$8d27ca75da600b9c$var$hsv2rgb","$8d27ca75da600b9c$var$map","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$8d27ca75da600b9c$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$8d27ca75da600b9c$var$names","$8d27ca75da600b9c$var$nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","$8d27ca75da600b9c$var$unpack","transparent","toLowerCase","$8d27ca75da600b9c$var$RGB_RE","$8d27ca75da600b9c$var$to","$8d27ca75da600b9c$var$from","$8d27ca75da600b9c$var$modHSL","ratio","$8d27ca75da600b9c$var$clone","proto","$8d27ca75da600b9c$var$fromObject","input","$8d27ca75da600b9c$var$functionParse","$8d27ca75da600b9c$var$rgbParse","$8d27ca75da600b9c$var$Color","constructor","ret","_rgb","_valid","valid","rgbString","hexString","hslString","$8d27ca75da600b9c$var$hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","$8d27ca75da600b9c$var$interpolate","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$8d27ca75da600b9c$var$rotate","$8d27ca75da600b9c$var$index_esm","isPatternOrGradient","colorLib","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","$8d27ca75da600b9c$export$91477dc880baac21","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","$8d27ca75da600b9c$export$4368d992c4eafac0","_scriptable","startsWith","_indexable","_fallback","defaults","duration","easing","loop","to","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","cur","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","$216d2bdc6f281bf6$export$a424a0aa8f687495","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","pointPosition","getPointPositionForValue","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","$216d2bdc6f281bf6$export$f32766ea09ec8bc4","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","$216d2bdc6f281bf6$export$a13296960cae0384","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","$216d2bdc6f281bf6$export$1ecca0613f5e56d2","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","$216d2bdc6f281bf6$export$4bb7493d241fd8a5","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","$216d2bdc6f281bf6$export$acaa6426d77a227e","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","containsColorsDefinitions","$216d2bdc6f281bf6$export$c537fa0d021d010b","_args","colorizer","cleanDecimatedDataset","cleanDecimatedData","$216d2bdc6f281bf6$export$be17f937e9aa7533","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","$216d2bdc6f281bf6$export$d19ba4d812bed757","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","$216d2bdc6f281bf6$export$ed247974535929c7","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","$216d2bdc6f281bf6$export$f99233281efd08a0","titleBlock","createTitle","WeakMap","$216d2bdc6f281bf6$export$d5c56664638992a4","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$216d2bdc6f281bf6$export$28c660c63b792dea","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","$216d2bdc6f281bf6$export$85df64a8eb6dc986","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_addedLabels","added"],"version":3,"file":"index.cda3f829.js.map"}